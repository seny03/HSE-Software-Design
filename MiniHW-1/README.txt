# Зоопарк - Консольное Приложение
Данное приложение представляет собой систему учета животных и инвентаря Московского зоопарка, построенную с применением принципов **SOLID** и **DI-контейнера**.

##  Функциональность
* Добавление новых животных в зоопарк с проверкой здоровья.  
* Вычисление общего потребления пищи животными.  
* Формирование списка животных для контактного зоопарка (доброта > 5).  
* Добавление инвентаря и его учет.  
* Отображение всей информации о зоопарке.  

---

## Применение принципов **SOLID**
### **S - Принцип единственной ответственности (SRP)**
- `Zoo` управляет животными и инвентарем.
- `VeterinaryClinic` проверяет здоровье животных.
- Наследники `Animal` и `Thing` соответствуют разным моделям данных.

### **O - Принцип открытости/закрытости (OCP)**
- Новые типы животных (`Giraffe`, `Elephant`) можно добавить без изменения `Zoo`.
- Новые виды инвентаря можно создать наследованием от `Thing`.

### **L - Принцип подстановки Барбары Лисков (LSP)**
- Любого наследника `Animal` можно передавать в код, работающий с `Animal`.
- Аналогично с `Herbo`, `Predator` и другими.

### **I - Принцип разделения интерфейсов (ISP)**
- `IAlive` (живые существа) содержит `Food` (потребляемое количество еды в день в кг).
- `IInventory` (инвентарь) содержит `Number` (идентификатор).

### **D - Принцип инверсии зависимостей (DIP)**
- Используются абстрактные классы и интерфейсы, остальные классы зависят от них.
- `DI-контейнер` управляет созданием объектов.

---

## ⚙️ Инструкция по запуску
* Убедитесь, что у вас установлен **.NET 8 или выше**.
* Убедитесь, что у вас установлен **xUnit** и **DependencyInjection**.
* Выполните запуск командой: `dotnet run --project .\ZooERP\ZooERP.csproj`
* Unit-тесты содержатся в проекте **ZooERPTests**.  Их можно запустить, например, если открыть ![](./MiniHW-1.sln) в Visual Studio.
